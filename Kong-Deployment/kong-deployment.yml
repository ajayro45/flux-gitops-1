# Complete Kong Gateway Setup (for workloads)
# Note: Kong Gateway Operator should be installed in kong-system namespace separately
# This file creates your gateway workloads in the kong namespace

---
# Create the kong namespace for workloads
apiVersion: v1
kind: Namespace
metadata:
  name: kong
  labels:
    name: kong

---
# Gateway Configuration - defines how Kong should be deployed
apiVersion: gateway-operator.konghq.com/v1beta1
kind: GatewayConfiguration
metadata:
  name: kong-config
  namespace: kong
spec:
  dataPlaneOptions:
    deployment:
      podTemplateSpec:
        spec:
          containers:
          - name: proxy
            image: kong:3.9.1
            env:
            - name: KONG_LOG_LEVEL
              value: "info"
            - name: KONG_ADMIN_LISTEN
              value: "127.0.0.1:8001"
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 512Mi
  controlPlaneOptions:
    deployment:
      podTemplateSpec:
        spec:
          containers:
          - name: controller
            image: kong/kubernetes-ingress-controller:3.2
            env:
            - name: CONTROLLER_LOG_LEVEL
              value: "info"
            - name: CONTROLLER_KONG_ADMIN_URL
              value: "http://127.0.0.1:8001"
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 512Mi

---
# GatewayClass - defines the Kong Gateway class
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: kong
spec:
  controllerName: konghq.com/gateway-operator
  parametersRef:
    group: gateway-operator.konghq.com
    kind: GatewayConfiguration
    name: kong-config
    namespace: kong

---
# Gateway - creates the actual Kong Gateway instance
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: kong-gateway
  namespace: kong
spec:
  gatewayClassName: kong
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
  # HTTPS listener removed until you have a TLS certificate
  # Uncomment the section below when you have a TLS secret
  # - name: https
  #   port: 443
  #   protocol: HTTPS
  #   allowedRoutes:
  #     namespaces:
  #       from: All
  #   tls:
  #     mode: Terminate
  #     certificateRefs:
  #     - name: kong-tls-secret

---
# Example HTTPRoute - routes traffic to your applications
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: example-route
  namespace: kong
spec:
  parentRefs:
  - name: kong-gateway
    namespace: kong
  hostnames:
  - "api.example.com"  # Change this to your domain
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /api
    backendRefs:
    - name: example-service  # Change this to your actual service name
      port: 80
      namespace: default     # Change this to your service namespace

---
# Example Service (for demonstration)
# Replace this with references to your actual services
apiVersion: v1
kind: Service
metadata:
  name: example-service
  namespace: default
spec:
  selector:
    app: example-app
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP

---
# Example Deployment (for demonstration)
# Replace this with your actual applications
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: example-app
  template:
    metadata:
      labels:
        app: example-app
    spec:
      containers:
      - name: app
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi

---
# Optional: Rate Limiting Plugin
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: rate-limiting
  namespace: kong
config:
  minute: 100
  hour: 1000
  policy: local
plugin: rate-limiting

---
# Optional: CORS Plugin
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: cors
  namespace: kong
config:
  origins:
  - "*"
  methods:
  - GET
  - POST
  - PUT
  - DELETE
  - OPTIONS
  headers:
  - Accept
  - Accept-Version
  - Content-Length
  - Content-MD5
  - Content-Type
  - Date
  - X-Auth-Token
  - Authorization
  exposed_headers:
  - X-Auth-Token
  credentials: true
  max_age: 3600
plugin: cors
